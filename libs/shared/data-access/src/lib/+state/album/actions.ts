import { SearchRequest } from '@metal-p3/album/domain';
import { EntityMap, EntityMapOne, Predicate, Update } from '@ngrx/entity';
import { createActionGroup, emptyProps, props } from '@ngrx/store';
import { Album } from '../model';

export const AlbumActions = createActionGroup({
  source: 'Album',
  events: {
    'Load Albums': props<{ request: Partial<SearchRequest> }>(),
    'Load Albums Success': props<{ albums: Album[] }>(),
    'Load Albums Page': props<{ request: Partial<SearchRequest> }>(),
    'Load Albums Page Success': props<{ albums: Album[] }>(),
    'Load Albums Error': props<{ loadError: string }>(),
    Search: props<{ request: Partial<SearchRequest> }>(),
    'Cancel Search': emptyProps(),
    'Add Album': props<{ album: Album }>(),
    'Set Album': props<{ album: Album }>(),
    'Upsert Album': props<{ album: Album }>(),
    'Upsert Albums': props<{ albums: Album[] }>(),
    'Update Album': props<{ update: Update<Album> }>(),
    'Update Albums': props<{ updates: Update<Album>[] }>(),
    'Map Album': props<{ entityMap: EntityMapOne<Album> }>(),
    'Map Albums': props<{ entityMap: EntityMap<Album> }>(),
    'Delete Albums': props<{ ids: string[] }>(),
    'Delete Albums By Predicate': props<{ predicate: Predicate<Album> }>(),
    'Clear Albums': emptyProps(),
    'View Album': props<{ id: number }>(),
    'Add New Album': props<{ folder: string }>(),
    'Add New Album Error': props<{ error: string }>(),
    'Get Album': props<{ id: number }>(),
    'Get Album Error': props<{ update: Update<Album> }>(),
    'Rename Folder': props<{ id: number; src: string; artist: string; album: string }>(),
    'Rename Folder Success': props<{ update: Update<Album> }>(),
    'Rename Folder Error': props<{ update: Update<Album> }>(),
    'Save Album': props<{ album: Album }>(),
    'Save Album Success': props<{ update: Update<Album> }>(),
    'Save Album Error': props<{ update: Update<Album> }>(),
    'Set Has Lyrics': props<{ id: number; hasLyrics: boolean }>(),
    'Set Transferred': props<{ id: number; transferred: boolean }>(),
    'Get Extra Files': props<{ id: number; folder: string }>(),
    'Set Extra Files': props<{ update: Update<Album> }>(),
    'Find Metal Archives Url': props<{ id: number; artist: string; album: string }>(),
    'Find Metal Archives Url Success': props<{ update: Update<Album> }>(),
    'Create New': emptyProps(),
    'Create New Success': emptyProps(),
    'Delete Album': props<{ id: number }>(),
    'Delete Album Success': props<{ id: number }>(),
    'Delete Album Error': props<{ id: number; error: string }>(),
  },
});
